version: "2"

services:
  test:
    build:
      context: ../
      dockerfile: ./systems/Dockerfile
    command: >
      bash -c "
        cabal update &&
        cabal install --only-dependencies --enable-tests &&
        cabal configure --enable-tests &&
        cabal test --show-details=always
      "
    environment:
      DATABASE_URL: postgres://postgres:@postgres:5432/postgres_test
    volumes:
      - ../main.hs:/app/main.hs
      - ../src:/app/src
      - ../test:/app/test
      - ../cabal.config:/app/cabal.config
      - ../non-stack-yesod.cabal:/app/non-stack-yesod.cabal
      - app_data:/app/dist
      - app_data:/root/.cabal
      - app_data:/root/.ghc

  postgres:
    image: postgres:9.5.3
    environment:
      POSTGRES_DB: postgres_test
    volumes:
      - postgres_data:/var/lib/postgresql/data

  flyway:
    image: hiogawa/flyway:4.0.1-0.0.1
    volumes:
      - ./sql:/flyway/sql
      - ./flyway.conf:/flyway/flyway.conf

  flyway_test:
    extends: flyway
    volumes:
      - ./flyway.test.conf:/flyway/flyway.conf

  flyway_production:
    extends: flyway
    volumes:
      - ./flyway.production.conf:/flyway/flyway.conf


  #############################
  # production image creation #
  #############################

  builder:
    extends: test # reuse build cache from test service
    command: >
      bash -c "
        cabal update &&
        cabal install --only-dependencies &&
        cabal install
        tar -czf build/production.tar.gz -C /root/.cabal/bin production
      "
    volumes:
      - ./build:/app/build

  distributor:
    build:
      context: ../
      dockerfile: ./systems/Dockerfile.dist
    image: registry.heroku.com/yesod-free-deploy/web


volumes:
  app_data:
  postgres_data:
